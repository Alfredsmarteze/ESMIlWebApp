@model DataStructure.ViewModel.PublicityAndEditorialUnitDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h4 class="text-muted">Publicity Unit</h4>
<h5 class="text-muted">Update <span class="text-bright"> @Model.Surname</span> record</h5>
<div class="container" style="background-color:lightblue">
    <div class="row">
        <form >
        <div class="row">
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Surname</label>
            <input id="rowId" type="hidden" value="@Model.Id">
            <input class="form-control" id="txtSurname" type="text" value="@Model.Surname" placeholder="">
            </div>
           
        </div>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Firstname</label>
            <input class="form-control" id="txtFirstname" type="text" value="@Model.Firstname" placeholder="">
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Middlename</label>
            <input class="form-control" id="txtMiddlename" type="text" value="@Model.Middlename" placeholder="">
            </div>
        </div>
        </div>
        <br/>
        <div class="row">
        <div class="col-lg-4">
           <div class="form-group mg-b-10-force">
              <label class="form-control-label">Gender</label>
          <vc:gender></vc:gender> 
          </div>
        </div>
        <div class="col-lg-4">
                            <div class="form-group mg-b-10-force">
                                <label for="">Date Of Birth</label>
                                <div class="date-input">
                                    <div class="ate-input">
                                        <input type="text" class="date form-control" placeholder="" id="txtDateofBirth" value="@Model.strDateOfBirth">
                                    </div>
                                </div>
                            </div>
                        </div><!-- col-4 -->
        </div>
        <br>
        <div class="row">
        <div class="col-lg-4">
           <div class="form-group mg-b-10-force">
              <label class="form-control-label">State of origin</label>
               <input class="form-control" id="txtState" type="text" value="@Model.StateOfOrigin" readonly placeholder="">
          </div>
        </div>
        </div>
        <div class="row">
        <div class="col-lg-4">
           <div class="form-group mg-b-10-force">
              <label class="form-control-label">LGA</label>
                        <input class="form-control" id="txtLga" type="text" value="@Model.LGA" readonly placeholder="">
          @*<div id="warning2" height> </div>
              <vc:lga></vc:lga> *@
          </div>
        </div>
        </div>
        <br/>
        <div class="row">
         <div class="col-4">
            <div class="form-group">
            <label class="form-label">Phone Number 1</label>
            <input class="form-control" id="txtPhoneNumber01" type="text" value="@Model.PhoneNumber01" placeholder="">
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Phone Number 2</label>
            <input class="form-control" id="txtPhoneNumber02" type="text" value="@Model.PhoneNumber02" placeholder="">
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Email</label>
            <input class="form-control" id="txtEmail" type="text" value="@Model.Email" placeholder="">
            </div>
        </div>
        </div>
        <br/>
        <div class="row">
        
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Hostel Address</label>
            <input class="form-control" id="txtHostelAddress" type="text" value="@Model.HostelAddress" placeholder="">
            </div>
        </div>
         <div class="col-4">
            <div class="form-group">
            <label class="form-label">Home Address</label>
            <input class="form-control" id="txtHomeAddress" type="text" value="@Model.HomeAddress" placeholder="">
            </div>
        </div>
               
        <div/>
        </div>
        <br/>
        <div class="row">
         <div class="col-4">
            <div class="form-group">
            <label class="form-label">Course of Study</label>
            <input class="form-control" id="txtCourseOfStudy" type="text" value="@Model.CourseOfStudy" placeholder="">
            </div>
        </div>
         <div class="row">
         <div class="col-4">
            <div class="form-group">
            <label class="form-label">Ambition</label>
            <input class="form-control" id="txtAmbition" type="text" value="@Model.Ambition" >
            </div>
        </div>
       
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Previous Unit</label>
            <vc:unit></vc:unit>
            </div>
        </div>
        <br/>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Position in Family</label>
            <input class="form-control" id="txtPositionInFamily" type="text" value="@Model.PositionInFamily" placeholder="">
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
            <label class="form-label">Social Media Address</label>
            <input class="form-control" id="txtSocialMediaAddress" type="text" value="@Model.SocialMediaAddress" placeholder="">
            </div>
        </div>
        <div class="col-lg-4">
                            <div class="form-group mg-b-10-force">
                                <label for="">Date Join ESM</label>
                                <div class="date-input">
                                    <div class="ate-input">
                                        <input type="text" class="date form-control" value="@Model.strDateJoinESM" placeholder="" id="txtDateJoinESM">
                                    </div>
                                </div>
                            </div>
                        </div><!-- col-4 -->
        </div>
            
        </div>
        </form>
    </div>
    <button class="btn float-right" id="btnSaveRecord">Save</button>
</div>


@section scripts{
<script>
    var saveUrl="@Url.Action("AddOrUpdatePublicityUnitData","PublicityUnit", new {area="Unit"})";
    
    $(document).ready(function(){
     $("#drpGender").val('@Model.Gender').trigger('change');
      $("#drpUnit").val('@Model.PreviousUnit').trigger('change');
    });
    $("#btnSaveRecord").click(function(e)
    {
        e.preventDefault();
       
            if (!$("#txtSurname").val()) {
                Swal.fire('Please input a value. Surname cannot be empty.', '', 'warning');
                $("#txtSurname").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtSurname").css({ 'background-color': '' });
            }
            if (!$("#txtFirstname").val()) {
                Swal.fire('Please input a value. Firstname cannot be empty.', '', 'warning');
                $("#txtFirstname").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtFirstname").css({ 'background-color': '' });
            }
            if (!$("#txtMiddlename").val()) {
                Swal.fire('Please input a value. Middlename cannot be empty.', '', 'warning');
                $("#txtMiddlename").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtMiddlename").css({ 'background-color': '' });
            }
            if (!$("#txtPhoneNumber01").val()) {
                Swal.fire('Please input a value. Phone Number 1 cannot be empty.', '', 'warning');
                $("#txtPhoneNumber01").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtPhoneNumber01").css({ 'background-color': '' });
            }
            //if (!$("#txtLga").val()) {
            //    Swal.fire('Please select your LGA.', '', 'warning');
            //    $("#txtLga").css({ 'background-color': 'orange', 'height': '7px', 'width': '100%' });
            //    return;
            //}
            //else {
            //    $("#txtLga").css({ 'background-color': '', 'height': '', 'width': '' });
            //}
            //if (!$("#txtState").val()) {
            //    Swal.fire('Please select your state of origin.', '', 'warning');
            //    $("#txtState").css({ 'background-color': 'orange', 'height': '7px', 'width': '100%' });
            //    return;
            //}
            //else {
            //    $("#txtState").css({ 'background-color': '', 'height': '', 'width': '' });
            //}
            if (!$("#txtAmbition").val()) {
                Swal.fire('Please input a value. Ambition cannot be empty.', '', 'warning');
                $("#txtAmbition").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtAmbition").css({ 'background-color': '' });
            }
            if (!$("#txtHostelAddress").val()) {
                Swal.fire('Please input a value. Hostel address cannot be empty.', '', 'warning');
                $("#txtHostelAddress").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtHostelAddress").css({ 'background-color': '' });
            }
            if (!$("#txtHomeAddress").val()) {
                Swal.fire('Please input a value. Home address cannot be empty.', '', 'warning');
                $("#txtHomeAddress").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtHomeAddress").css({ 'background-color': '' });
            }
            if (!$("#txtDateJoinESM").val()) {
                Swal.fire('Please input a value. Date you joined ESM is needed.', '', 'warning');
                $("#txtDateJoinESM").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtDateJoinESM").css({ 'background-color': '' });
            }
            if (!$("#txtCourseOfStudy").val()) {
                Swal.fire('Please input a value. Course of study cannot be empty.', '', 'warning');
                $("#txtCourseOfStudy").css({ 'background-color': 'orange' });
                return;
            }
            else {
                $("#txtCourseOfStudy").css({ 'background-color': '' });
            }
        
        var body={
            Id:$("#rowId").val() == "" ? 0: $.trim($("#rowId").val()),
            Surname:$.trim($("#txtSurname").val()),
            Firstname:$.trim($("#txtFirstname").val()),
            Middlename:$.trim($("#txtMiddlename").val()),
            DateOfBirth:$.trim($("#txtDateofBirth").val()),
            Gender:$.trim($("#drpGender").val()),
            Email:$.trim($("#txtEmail").val()),
            PhoneNumber01:$.trim($("#txtPhoneNumber01").val()),
            PhoneNumber02:$.trim($("#txtPhoneNumber02").val()),
          //  StateOfOrigin:$.trim($("#txtState").val()),
            Ambition:$("#txtAmbition").val(),
          //  LGA:$.trim($("#txtLga").val()),
            PreviousUnit:$("#drpUnit").val(),
            PositionInFamily:$.trim($("#txtPositionInFamily").val()),
            SocialMediaAddress:$.trim($("#txtSocialMediaAddress").val()),
            HostelAddress:$.trim($("#txtHostelAddress").val()),
            HomeAddress:$.trim($("#txtHomeAddress").val()),
            DateJoinESM:$.trim($("#txtDateJoinESM").val()),
            CourseOfStudy:$.trim($("#txtCourseOfStudy").val()),
        }
    
        var payload=SiteUtils.encrypt(JSON.stringify(body)).toString();
            SiteUtils.post({payload:payload}, saveUrl).then(function (response){
                if (response.hasError == false) 
                {
                    Swal.fire(response.message, '', 'success');
                }
                else if (response.hasError == true) 
                {
                    Swal.fire(response.message, '', 'error');
                }
            })

    
   
    });
    
    //Date time picker
    jQuery('.date').datepicker({
        timepicker:false,
        format:'m/d/Y',
            changeYear: true,
            changeMonth: true,
            yearRange: "1970:2025"
        })
</script>
}